-feed_url = url_for(:format => "atom", :tags => params[:tags])

-content_for :rss do
  %link{:rel=>"alternate", :type=>"application/atom+xml", :title => "atom", :href=> url_for(:format => "atom", :tags => params[:tags])}
  %link{:rel=>"alternate", :type=>"application/atom+xml", :title => "atom", :href=> url_for(:format => "atom")}

-if @questions.empty?
  -empty_box_type = "questions"
  -empty_box_url = new_question_path

  -if !session["filter"].nil? && session[:filter] != "all"
    -empty_box_type = "filtered_questions"
    -empty_box_url = filtered_questions_path(filter: 'all')
  -elsif current_group.languages.count > 0 && ((logged_in? && current_user.language_filter != "any") || session["user.language_filter"] != "any")
    -empty_box_type = "filtered_by_language_questions"
    -empty_box_url = "#"

  = render "shared/empty", :type => empty_box_type, :url => empty_box_url

-else
  -if params[:answers]
    -cache_for(:questions, :answers, current_order.to_s, params[:page].to_i, params[:per_page].to_i) do
      /Answers
      -@questions.each do |question|
        -answer = find_answer(question)
        = render "answers/answer", :question => question, :answer => answer if answer

  -else
    -cache_for(:questions, current_order.to_s, params[:page].to_i, params[:per_page].to_i, @languages.sort, params[:unanswered] ? "unanswered" : "" ) do
      /Questions
      -@questions.each do |question|
        = render "questions/question", :handers => [:haml], :question => question

  = paginate @questions
