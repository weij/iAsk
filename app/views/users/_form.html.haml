
%fieldset.avatar_field
  -unless @user.new?
    .field
      = avatar_img(current_user, {:size =>"big"})

      = f.label :avatar, t('avatar', :scope => "activerecord.attributes.user"), :class => "label"
      -if @user.has_avatar?
        = image_tag(avatar_user_path(@user))
      .input-browser
        = f.file_field :avatar
      =link_to t("users.form.avatar_tip"), "http://gravatar.com", :target => "_blank"

    .field
      .checkbox
        = f.label "use_gravatar", :class => "label"
        = f.check_box "use_gravatar"

.information
  %fieldset
    %legend
      = t("users.form.information")

    .field
      = f.label :login, t(:login, :scope => "activerecord.attributes.user"), :class => "label"
      = f.text_field :login, :class => "text_field"

    .field
      = f.label :email, t(:email, :scope => "activerecord.attributes.user"), :class => "label"
      = f.text_field :email, :class => "text_field"

    -if !@user.new?
      .field
        = label_tag :current_password, t(:current_password, :scope => "activerecord.attributes.user"), :class => "label"
        = password_field :current_password, '', :class => 'text_field'
        %strong
          = link_to t('devise.passwords.link'), new_password_users_path

    .field
      = f.label :password, t(:password, :scope => "activerecord.attributes.user"), :class => "label"
      = f.password_field :password, :class => "text_field"

    .field
      = f.label :password_confirmation, t(:password_confirmation, :scope => "activerecord.attributes.user"), :class => "label"
      = f.password_field :password_confirmation, :class => "text_field"


    .field
      = f.label :name, t(:name, :scope => "activerecord.attributes.user"), :class => "label"
      = f.text_field :name, :class => "text_field"

    .field
      = f.label :bio, t(:bio, :scope => "activerecord.attributes.user", :default => "Bio"), :class => "label"
      = f.text_field :bio, :class => "text_field"

    -unless @user.new_record?
      .field.birthday
        = f.label :birthday, t(:birthday, :scope => "activerecord.attributes.user"), :class => "label"
        = f.date_select :birthday, :start_year => 1920, :include_blank => true, :end_year => Time.now.year

      .field
        = f.label :website, t(:website, :scope => "activerecord.attributes.user"), :class => "label"
        = f.text_field :website, :class => "text_field"


    -if AppConfig.enable_i18n
      .field
        = f.label :language, t('.language'), :class => "label"
        = f.select :language, locales_options, {}, :class => "select"
    -else
      = f.hidden_field :language, :value => (current_group.language || AppConfig.default_language)

    .field
      = f.label :timezone, t(:timezone, :scope => "activerecord.attributes.user"), :class => "label"
      - ActiveSupport::TimeZone.zones_map.delete(""); ActiveSupport::TimeZone.zones_map.delete(nil)
      = f.time_zone_select(:timezone, nil, :include_blank => true, :class => "select")

    -unless @user.new_record?
      .field
        .checkbox
          = f.label :hide_country, t(:hide_country, :scope => "activerecord.attributes.user"), :class => "label"
          = f.check_box :hide_country, :class => "checkbox"

    -if AppConfig.enable_i18n
      .field
        = f.label :preferred_languages, t(:preferred_languages, :scope => "activerecord.attributes.user"), :class => "label"
        = f.select :preferred_languages, AVAILABLE_LANGUAGES.collect{|lang| [language_desc(lang), lang]}, {:selected => @user.preferred_languages.to_a},{:multiple => true}


    -else
      = hidden_field_tag "user[preferred_languages][]", (current_group.language || AppConfig.default_language)


  -unless @user.new_record?
    -#.field.networks
      -#= render "shared/networks", :f => f, :networks => @user.networks, :share => true

    %fieldset
      %legend
        = t(".notifications")
      .field
        .checkbox
          = f.label t(".new_answer_notification"), :class => "label"
          = f.check_box "notification_opts[new_answer]", :checked => @user.notification_opts["new_answer"], :class => "checkbox"
      .field
        .checkbox
          = f.label t(".give_advice_notification"), :class => "label"
          = f.check_box "notification_opts[give_advice]", :checked => @user.notification_opts["give_advice"]
      .field
        .checkbox
          = f.label t(".activities_notification"), :class => "label"
          = f.check_box "notification_opts[activities]", :checked => @user.notification_opts["activities"]
      .field
        .checkbox
          = f.label t(".reports_notification"), :class => "label"
          = f.check_box "notification_opts[reports]", :checked => @user.notification_opts["reports"]
      - if request.user_agent =~ /webkit/i
        .field
          .checkbox
            = f.label t(".desktop_notification"), :class => "label"
            = f.check_box "notification_opts[desktop_notifs]", :checked => @user.notification_opts["desktop_notifs"], :id => "desktop_notifs"

    %a{:name => "social"}

    - if @user.twitter_login?

      %fieldset
        %legend
          = t(".social_interaction")
        .field
          .checkbox
            = f.label t(".send_questions_to_twitter"), :class => "label"
            = f.check_box "notification_opts[questions_to_twitter]", :checked => @user.notification_opts.questions_to_twitter
        .field
          .checkbox
            = f.label t(".send_badges_to_twitter"), :class => "label"
            = f.check_box "notification_opts[badges_to_twitter]", :checked => @user.notification_opts.badges_to_twitter
        .field
          .checkbox
            = f.label t(".send_favorites_to_twitter"), :class => "label"
            = f.check_box "notification_opts[favorites_to_twitter]", :checked => @user.notification_opts.favorites_to_twitter
        .field
          .checkbox
            = f.label t(".send_answers_to_twitter"), :class => "label"
            = f.check_box "notification_opts[answers_to_twitter]", :checked => @user.notification_opts.answers_to_twitter
        .field
          .checkbox
            = f.label t(".send_comments_to_twitter"), :class => "label"
            = f.check_box "notification_opts[comments_to_twitter]", :checked => @user.notification_opts.comments_to_twitter

    - if @user.owns_custom_domain_groups?
      %fieldset
        %legend
          = t('users.form.check_domain_title')
          %ul
            - current_user.custom_domain_owned_groups.each do |group|
              %li= link_to t('users.form.check_domain', :domain => group.domain), check_custom_domain_path(group.id)