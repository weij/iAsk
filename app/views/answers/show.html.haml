= include_latex
- question_body = find_and_preserve(shapado_auto_link(markdown(@question.body.present? ? @question.body : @question.title)))

%section#question{:class => "main-question #{@question.id}", :item_scope => '', :itemtype => "http://schema.org/Article"}
  .author
    %p
      %span
        = I18n.t('global.by_semi')
      = render :partial => "users/user_mini", :locals => {:user => @question.user, :author => true}
      %span
        = t('activerecord.attributes.question.created_at')
      %time{:datetime => @question.created_at.iso8601, :itemprop => "datePublished"}
        = t("time.ago", :time => time_ago_in_words(@question.created_at))
      -if !@question.user.hide_country && @question.address.present?
        %span
          = t("global.from", :site => CGI.escape_html(@question.address_name))
    %h1{:itemprop => "name"}
      = link_to @question.title, question_path(@question)
      - if @question.closed
        =" [#{t("closed", :scope => "activerecord.attributes.question").upcase}]"

    .description.markdown
      .clearfix{:itemprop => "articleBody"}
        = question_body

#answers-content-wrap
  .answers-list
    = render :partial=> "questions/answer", :locals=> {:question => @question, :answer => @answer, :comment => Answer.new}
